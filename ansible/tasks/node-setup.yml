# - name: Test addition of multiple items
#   shell: echo {{ item }}
#   loop:
#     - testuser1
#     - testuser2

# - name: Install nodejs and npm
#   become: true
#   apt:
#     name: ["nodejs", "npm"]
#   tags:
#     - install
#     - node

# - name: npmjs prefix
#   shell: mkdir -p ~/.local/.npm-global
#   tags:
#   - install
#   - node

# - name: add npmjs to path
#   shell: PATH=~/.local/.npm-global/bin:$PATH
#   tags:
#   - install
#   - node

# - name: npmjs global settings
#   shell: npm config set prefix '~/.local/.npm-global'
#   tags:
#   - install
#   - node

# - name: npmjs global settings export path in case I don't have dotfiles installed
#   shell: export PATH=~/.local/.npm-global/bin:$PATH
#   tags:
#   - install
#   - node
#   - npm-path

# - name: Install N
#   npm:
#     name: n
#     global: yes
#   tags:
#     - install
#     - node

# - name: Install correct version of Node
#   shell: n 14
#   tags:
#     - install
#     - node

- name: Setup multiple LTS versions of node
  become: yes
  become_flags: -i # Execute config files such as .profile (Ansible uses non-interactive login shells)
  become_user: root
  tags:
    - dotfiles
    - install
    - ssh
  block:
    - name: Install nvm
      ansible.builtin.shell: >
        curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.39.1/install.sh | bash
      args:
        executable: /bin/bash
        chdir: "$HOME"
        creates: "$HOME/.nvm/nvm.sh"

    - name: Setup .profile
      ansible.builtin.lineinfile:
        path: ~/.profile
        line: source ~/.nvm/nvm.sh # This will make sure Node is on the user's PATH
        create: yes

    - name: Setup .bashrc
      ansible.builtin.lineinfile:
        path: ~/.bashrc
        line: source ~/.nvm/nvm.sh # This will make sure Node is on the user's PATH
        create: yes

    - name: Install node and set version
      become: yes
      become_user: root
      ansible.builtin.shell: "source /root/.nvm/nvm.sh && nvm install {{item}}"
      args:
        executable: /bin/bash
        creates: "$HOME/.nvm/versions/node/v{{item}}"
      loop:
        - 16.4.2
        - 14.18.2
        - 12.22.8
        - 10.24.1
        - 8.17.0
